{"apiVersion": "0.1", "swaggerVersion": "1.2", "basePath": "http://localhost", "spec_endpoint_path": "/api/spec", "resourcePath": "/", "produces": ["application/json"], "description": "Auto generated API docs by flask-restful-swagger", "models": {"PostLocksArgs": {"id": "PostLocksArgs", "description": null, "notes": null, "required": [], "properties": {"nickname": {"type": "string"}, "timezone": {"type": "string"}}}, "PostUserLockArgs": {"id": "PostUserLockArgs", "description": null, "notes": null, "required": ["ownedLockIds"], "properties": {"ownedLockIds": {"type": "array", "items": {"$ref": "string"}}}}, "PutLockStatusArgs": {"id": "PutLockStatusArgs", "description": null, "notes": null, "required": ["status"], "properties": {"status": {"type": "string"}, "password": {"type": "string"}}}, "PutLockPasswordArgs": {"id": "PutLockPasswordArgs", "description": null, "notes": null, "required": [], "properties": {"password": {"type": "string"}, "expiration": {"type": "integer"}, "activeDays": {"type": "array", "items": {"$ref": "string"}}}}, "PostLockPasswordsArgs": {"id": "PostLockPasswordsArgs", "description": null, "notes": null, "required": ["type", "password"], "properties": {"type": {"type": "string"}, "password": {"type": "string"}, "expiration": {"type": "integer"}}}, "AdminLocksResponse": {"id": "AdminLocksResponse", "description": null, "notes": null, "required": ["id", "status", "nickname", "createdAt"], "properties": {"id": {"type": "string"}, "status": {"type": "string"}, "timezone": {"type": "string"}, "nickname": {"type": "string"}, "createdAt": {"type": "integer"}}}, "LockPasswordResponse": {"id": "LockPasswordResponse", "description": null, "notes": null, "required": ["id", "createdAt", "type"], "properties": {"id": {"type": "string"}, "type": {"type": "string"}, "expiration": {"type": "integer"}, "createdAt": {"type": "integer"}, "activeDays": {"type": "array", "items": {"$ref": "string"}}}}, "LockPasswordsResponse": {"id": "LockPasswordsResponse", "description": null, "notes": null, "required": ["otp", "permanent"], "properties": {"otp": {"type": "array", "items": {"$ref": null}}, "permanent": {"type": "array", "items": {"$ref": null}}}}, "UserResponse": {"id": "UserResponse", "description": null, "notes": null, "required": ["id", "email", "displayName"], "properties": {"id": {"type": "string"}, "email": {"type": "string"}, "displayName": {"type": "string"}}}, "UserLockResponse": {"id": "UserLockResponse", "description": null, "notes": null, "required": ["ownedLockIds"], "properties": {"ownedLockIds": {"type": "array", "items": {"$ref": "string"}}}}, "UserLockStatusResponse": {"id": "UserLockStatusResponse", "description": null, "notes": null, "required": ["status"], "properties": {"status": {"type": "string"}}}, "PutUserLockStatusResponse": {"id": "PutUserLockStatusResponse", "description": null, "notes": null, "required": ["status", "providedPasswordDisabled"], "properties": {"status": {"type": "string"}, "providedPasswordDisabled": {"type": "boolean"}}}}, "apis": [{"path": "/api/v1/admin/locks", "description": "An admin api token is required in order to use this route.", "notes": "This is used to register new lock devices to the database.", "operations": [{"method": "post", "parameters": [{"in": "body", "name": "body", "required": true, "schema": {"$ref": "#/definitions/PostLocksArgs"}, "dataType": "PostLocksArgs", "paramType": "body"}], "nickname": "nickname", "summary": null, "notes": "Creates a lock given an admin id token", "responseClass": "AdminLocksResponse", "responseMessages": [{"code": 200, "message": "A AdminLocksResponse object"}], "tags": ["Admin"]}]}, {"path": "/api/v1/locks/{lockId}/passwords/{passwordId}", "description": "Represents an abstract RESTful resource. Concrete resources should", "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.", "operations": [{"method": "get", "parameters": [{"name": "lockId", "dataType": "string", "paramType": "path"}, {"name": "passwordId", "dataType": "string", "paramType": "path"}], "nickname": "nickname", "summary": null, "notes": "Gets metadata on a lock password. Passwords are passed as arguments to change the status or sensitive metadata of a lock. In addition, the user needs to own the lock as well", "tags": ["Password Management"], "responseClass": "LockPasswordResponse", "responseMessages": [{"code": 200, "message": "A LockPasswordResponse object"}]}, {"method": "put", "parameters": [{"name": "lockId", "dataType": "string", "paramType": "path"}, {"name": "passwordId", "dataType": "string", "paramType": "path"}, {"in": "body", "name": "body", "required": true, "schema": {"$ref": "#/definitions/PutLockPasswordArgs"}, "dataType": "PutLockPasswordArgs", "paramType": "body"}], "nickname": "nickname", "summary": null, "notes": "Changes a password. Passwords are passed as arguments to change the status or sensitive metadata of a lock. In addition, the user needs to own the lock as well", "tags": ["Password Management"], "responseClass": "LockPasswordResponse", "responseMessages": [{"code": 200, "message": "A LockPasswordResponse object"}]}]}, {"path": "/api/v1/locks/{lockId}/passwords", "description": "Represents an abstract RESTful resource. Concrete resources should", "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.", "operations": [{"method": "post", "parameters": [{"name": "lockId", "dataType": "string", "paramType": "path"}, {"in": "body", "name": "body", "required": true, "schema": {"$ref": "#/definitions/PostLockPasswordsArgs"}, "dataType": "PostLockPasswordsArgs", "paramType": "body"}], "nickname": "nickname", "summary": null, "notes": "Adds a password to a lock. Passwords are passed as arguments to change the status or sensitive metadata of a lock. In addition, the user needs to own the lock as well", "tags": ["Password Management"], "responseClass": "LockPasswordResponse", "responseMessages": [{"code": 200, "message": "A LockPasswordResponse object"}]}, {"method": "get", "parameters": [{"name": "lockId", "dataType": "string", "paramType": "path"}], "nickname": "nickname", "summary": null, "notes": "Gets metadata about a lock's passwords. Passwords are passed as arguments to change the status or sensitive metadata of a lock. In addition, the user needs to own the lock as well", "tags": ["Password Management"], "responseClass": "LockPasswordsResponse", "responseMessages": [{"code": 200, "message": "A LockPasswordsResponse object"}]}]}, {"path": "/api/v1/locks/{lockId}/status", "description": "Represents an abstract RESTful resource. Concrete resources should", "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.", "operations": [{"method": "get", "parameters": [{"name": "lockId", "dataType": "string", "paramType": "path"}], "nickname": "nickname", "summary": null, "notes": "Gets the lock status of a user owned lock", "responseClass": "UserLockStatusResponse", "responseMessages": [{"code": 200, "message": "A UserLockStatusResponse object"}], "tags": ["Locks"]}, {"method": "put", "parameters": [{"name": "lockId", "dataType": "string", "paramType": "path"}, {"in": "body", "name": "body", "required": true, "schema": {"$ref": "#/definitions/PutLockStatusArgs"}, "dataType": "PutLockStatusArgs", "paramType": "body"}], "nickname": "nickname", "summary": null, "notes": "Updates a lock status. If an inputted password is removed (as with OTP passwords), then the JSON payload will contain inputedPasswordDisabled: true", "responseClass": "PutUserLockStatusResponse", "responseMessages": [{"code": 200, "message": "A PutUserLockStatusResponse object"}], "tags": ["Locks"]}]}, {"path": "/api/v1/locks", "description": "Represents an abstract RESTful resource. Concrete resources should", "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.", "operations": [{"method": "post", "parameters": [{"in": "body", "name": "body", "required": true, "schema": {"$ref": "#/definitions/PostUserLockArgs"}, "dataType": "PostUserLockArgs", "paramType": "body"}], "nickname": "nickname", "summary": null, "notes": "Adds a valid lock id to a user's account", "responseClass": "UserLockResponse", "responseMessages": [{"code": 200, "message": "A UserLockResponse object"}], "tags": ["Locks"]}, {"method": "get", "parameters": [], "nickname": "nickname", "summary": null, "notes": "Returns a list of locks owned by a user", "responseClass": "UserLockResponse", "responseMessages": [{"code": 200, "message": "A UserLockResponse object"}], "tags": ["Locks"]}]}, {"path": "/api/v1/user", "description": "Represents an abstract RESTful resource. Concrete resources should", "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.", "operations": [{"method": "post", "parameters": [], "nickname": "nickname", "summary": null, "notes": "Returns user information", "responseClass": "UserResponse", "responseMessages": [{"code": 200, "message": "A UserResponse object"}], "tags": ["Users"]}, {"method": "get", "parameters": [], "nickname": "nickname", "summary": null, "notes": "Returns user information", "responseClass": "UserResponse", "responseMessages": [{"code": 200, "message": "A UserResponse object"}], "tags": ["Users"]}]}]}