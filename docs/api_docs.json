{"apiVersion": "0.1", "swaggerVersion": "1.2", "basePath": "http://localhost", "spec_endpoint_path": "/api/spec", "resourcePath": "/", "produces": ["application/json"], "description": "Auto generated API docs by flask-restful-swagger", "models": {}, "apis": [{"path": "/api/v1/admin/locks", "description": "Represents an abstract RESTful resource. Concrete resources should", "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.", "operations": [{"method": "post", "parameters": [{"name": "passwords", "description": "A list of passwords to initialize the lock with", "required": false, "paramType": "body", "dataType": "array", "items": {"type": "string"}}, {"name": "nickname", "description": "A readable nickname for the lock", "required": false, "paramType": "body", "dataType": "string"}, {"name": "status", "description": "A lock status to initialize the lock to", "required": false, "paramType": "body", "dataType": "string"}, {"name": "createdAt", "description": "The unix milliseconds since epoch in which the lock was registered", "required": false, "paramType": "body", "dataType": "int"}], "nickname": "nickname", "summary": null, "notes": "Creates a lock given an admin id token"}]}, {"path": "/api/v1/locks/{lock_id}/lockStatus", "description": "Represents an abstract RESTful resource. Concrete resources should", "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.", "operations": [{"method": "get", "parameters": [{"name": "lock_id", "dataType": "string", "description": "A lock id that the user owns", "required": true, "paramType": "path"}], "nickname": "nickname", "summary": null, "notes": "Gets the lock status of a user owned lock"}, {"method": "put", "parameters": [{"name": "lock_id", "description": "", "required": true, "paramType": "path", "dataType": "string"}, {"name": "status", "description": "", "required": true, "paramType": "body", "dataType": "string"}], "nickname": "nickname", "summary": null, "notes": "Updates a lock status"}]}, {"path": "/api/v1/userLocks", "description": "Represents an abstract RESTful resource. Concrete resources should", "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.", "operations": [{"method": "get", "parameters": [], "nickname": "nickname", "summary": null, "notes": "Returns a list of locks owned by a user"}, {"method": "post", "parameters": [{"name": "ownedLockIds", "description": "", "required": false, "paramType": "body", "dataType": "array", "items": {"type": "string"}}], "nickname": "nickname", "summary": null, "notes": "Adds a valid lock id to a user's account"}]}, {"path": "/api/v1/user", "description": "Represents an abstract RESTful resource. Concrete resources should", "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.", "operations": [{"method": "get", "parameters": [], "nickname": "nickname", "summary": null, "notes": "Returns user information"}, {"method": "post", "parameters": [{"name": "email", "description": "", "required": false, "paramType": "body", "dataType": "string"}, {"name": "name", "description": "", "required": false, "paramType": "body", "dataType": "string"}], "nickname": "nickname", "summary": null, "notes": "Returns user information"}]}]}